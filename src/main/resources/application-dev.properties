#diz aonde esta as tabelas que ele deve pegar, no caso as que tiverem @entity ou @table
#spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata

#diz o que ele deve fazer com as tabelas, neste caso criar os scripts(sql) dela
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create

#em qual arquivo ele deve colocar esse script(sql)
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql

#Define o delimitador usado no final de cada comando SQL no script gerado, neste caso o ";"
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

spring.datasource.url=jdbc:postgresql://localhost:5433/dslist
spring.datasource.username=postgres
spring.datasource.password=1234567

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true